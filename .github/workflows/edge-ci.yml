name: Edge CI

# Note: there is no way to schedule a recurring workflow on a different branch (https://github.com/orgs/community/discussions/16107).
# Thus, any changes to this workflow file that should be applied during the next run needs to be committed to main, not edge.
on:
  schedule:
    - cron:  '0 3 * * *'
  pull_request:
    branches: [ main ]

# For maximum cache coherency, ensure only one outstanding build at any given time
concurrency: release

jobs:
  assemble-deephaven-core:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout deephaven-core
        uses: actions/checkout@v3
        with:
          repository: deephaven/deephaven-core

      - name: Setup JDK 11
        id: setup-java-11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java-11.outputs.path }}" >> $GITHUB_ENV

      - name: Setup gradle properties
        run: |
          cat .github/env/${{ runner.os }}/gradle.properties >> gradle.properties
          echo >> gradle.properties
          echo "org.gradle.java.installations.paths=${{ steps.setup-java-11.outputs.path }}" >> gradle.properties
          cat gradle.properties

      - name: Assemble distribution
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: build-server
          arguments: --scan outputVersion server-jetty-app:assemble py-server:assemble
          gradle-version: wrapper

      - uses: actions/upload-artifact@v3
        with:
          name: assemble-deephaven-core
          path: |
            build/version
            server/jetty-app/build/distributions/*.tar
            py/server/build/wheel/*.whl
          retention-days: 2

  bake-images:
    needs: assemble-deephaven-core
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: edge

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/download-artifact@v3
        with:
          name: assemble-deephaven-core
          path: artifacts

      - name: Extract artifact metadata
        id: artifact_metadata
        run: |
          deephaven_version=$(< artifacts/build/version)
          deephaven_checksum=$(sha256sum artifacts/server/jetty-app/build/distributions/server-jetty-${deephaven_version}.tar | awk -F " " '{print $1}')
          echo "deephaven_version=${deephaven_version}" >> $GITHUB_OUTPUT
          echo "deephaven_checksum=${deephaven_checksum}" >> $GITHUB_OUTPUT

      - name: Prepare artifacts
        run: |
          mv artifacts/server/jetty-app/build/distributions/server-jetty-${{ steps.artifact_metadata.outputs.deephaven_version }}.tar server-scratch/
          mv artifacts/py/server/build/wheel/deephaven_core-${{ steps.artifact_metadata.outputs.deephaven_version }}-py3-none-any.whl server/python/base/
          echo "deephaven-core[autocomplete] @ file:///requirements/deephaven_core-${{ steps.artifact_metadata.outputs.deephaven_version }}-py3-none-any.whl" > server/python/base/requirements.txt

      - name: Bake
        uses: docker/bake-action@v2.3.0
        with:
          targets: release-limited
          pull: true
          push: ${{ github.event_name != 'pull_request' }}
          set: |
            *.cache-to=
        env:
          REPO_PREFIX: ghcr.io/${{ github.repository_owner }}/
          DEEPHAVEN_VERSION: ${{ steps.artifact_metadata.outputs.deephaven_version }}
          DEEPHAVEN_SHA256SUM: ${{ steps.artifact_metadata.outputs.deephaven_checksum }}
          SERVER_SCRATCH_TARGET: server-scratch-local
          TAG: edge
